/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package st.peterea.minecraft.automation

import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNotNull

class MinecraftServerTest {
    @Test fun createServerWorks() {
        var createCalls = 0
        var getSshKeysCalls = 0
        class MockVirtualServer : VirtualServer {
            override fun start() { }
            override fun stop() { }
            override fun getIp() = "192.168.0.1"
            override fun assignIp(ip: FloatingIp) {}
        }
        class MockProvider : CloudProvider {
            override fun createNewServer(identifier: String, sshKey: SshKey, startingScript: StartupScript?): VirtualServer {
                assertEquals(SshKey("sshKey1").id, sshKey.id, "The correct SSH key is selected")
                createCalls += 1
                return MockVirtualServer()
            }
            override fun getSshKeys(): List<SshKey> {
                getSshKeysCalls += 1
                return listOf(SshKey("sshKey1"), SshKey("SomethingElse"))
            }
        }

        val mockCloudProvider = MockProvider()
        val minecraftServer = MinecraftServer(mockCloudProvider)

        assertNotNull(minecraftServer, "MinecraftServer cannot be null")

        minecraftServer.createNew()

        assertEquals(1, createCalls, "createNewServer must be called once")
        assertEquals(1, getSshKeysCalls, "getSshKeysCalls must be called exactly once")
    }
}
